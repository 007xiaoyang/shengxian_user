<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shengxian.mapper.OrderMapper">


    <!--产品是否限购-->
    <select id="goodsIsRestricted" resultType="Double">
        select num  from shengxian_restriction_goods where goods_id = #{goods_id}
    </select>

    <!--产品是否满赠-->
    <select id="goodsIsFullGift" resultType="HashMap">
        select full,bestow from shengxian_full_bestow where goods_id = #{goods_id}
    </select>

    <!--查询当前切换绑定的店铺是否有购物车-->
    <select id="selectBindingIsShoppingcart" resultType="Integer">
        select id from shengxian_shopping_cart where binding_id=#{binding_id}
    </select>

    <!--添加当前切换绑定的店铺购物车-->
    <insert id="addBindingShoppongcart" keyProperty="id" useGeneratedKeys="true" >
        insert into shengxian_shopping_cart (binding_id ,create_time)values(#{binding_id} ,#{create_time})
    </insert>

    <!--查询购物车详情里是否有产品-->
    <select id="selectShoppingcartDetailIsGoods_id" resultType="Integer">
        select id  from shengxian_shopping_cart_detail where  sc_id = #{sc_id} and  goods_id = #{goods_id}
    </select>

    <!--删除购物车详情id-->
    <delete id="deleteShoppingcartDetail">
        delete from shengxian_shopping_cart_detail where id=#{id}
    </delete>

    <!--通过购物车id查询购物车下是否还有产品-->
    <select id="findShoppingcartIsGoods" resultType="Integer">
        select id from  shengxian_shopping_cart_detail where sc_id = #{sc_id}
    </select>

    <!--删除购物车-->
    <delete id="deleteShoppingcart">
        delete from shengxian_shopping_cart where id=#{id}
    </delete>

    <!--修改购物车详情的产品数量-->
    <update id="updateShoppingcartDetailIsGoods_id">
        <if test="type == 1">
            update shengxian_shopping_cart_detail set num = num + #{num} where id =#{id}
        </if>
        <if test="type == 2">
            update shengxian_shopping_cart_detail set num = #{num} where id =#{id}
        </if>

    </update>

    <!--添加购物车详情的产品数量-->
    <insert id="addShoppingcartDetailIsGoods_id" keyProperty="id" useGeneratedKeys="true">
        insert into shengxian_shopping_cart_detail(sc_id ,goods_id ,num ,create_time)
        values(#{sc_id} ,#{goods_id} ,#{num} ,#{create_time})
    </insert>

    <!--通过购物车详情id查询加入购物车的总数量是否大于限购数量-->
    <select id="selectShoppingcartDetailIsGoods_idNum" resultType="Double">
        select num from shengxian_shopping_cart_detail where id=#{id}
    </select>

    <!--计算加入购物车所有产品的总金额-->
    <select id="selectGoodsTatolMoney" resultType="Double">
        select ifnull(sum(num * (select gs.price from shengxian_goods_scheme gs where scd.goods_id=gs.goods_id
        and gs.scheme_id = (select scheme_id from shengxian_binding where is_del = 0 and id= #{binding_id} ) )),0) money
        from shengxian_shopping_cart_detail scd where scd.sc_id =#{sc_id}
    </select>

    <!--修改购物车总金额-->
    <update id="updateShoppingcartTotalMoney">
        update shengxian_shopping_cart set money =#{money} where id=#{id}
    </update>

    <!--减少购物车详情里的产品数量-->
    <update id="updateShoppingcartDetailGoodsNum">
         update shengxian_shopping_cart_detail set num = num - 1 where id=#{id}
    </update>

    <select id="shoppingcartDetailGoodsNum" resultType="HashMap">
        select sc_id ,num from shengxian_shopping_cart_detail where id = #{id}
    </select>

    <!--修改产品赠送数量-->
    <update id="updateShoppingcartDetailGoodsGiveNum">
        update shengxian_shopping_cart_detail set give_num =#{give_num} where id=#{id}
    </update>

    <!--查询起送价,店铺id，店铺名称-->
    <select id="findStartingPrice" resultType="com.shengxian.entity.ShoppingHashMap">
        select ifnull(bd.starting_price,0)starting_price ,bd.business_id ,
        (select store_name from shengxian_business where is_del=0 and bd.business_id=id ) store_name
        from shengxian_binding bd where bd.is_del=0 and bd.id = #{id}
    </select>

    <!--通过购物车id查询购物车下的产品总数-->
    <select id="shoppingcartGoodsDetailGoodsCount" resultType="Integer">
        select ifnull(sum(num), 0) from shengxian_shopping_cart_detail where sc_id = #{sc_id}
    </select>
    
    <!--通过店铺id判断加入购物车的产品是否被下架了或者是删除了，如果有则直接删除购物车详情里的产品-->
    <delete id="deleteShoppingCartDetailByBusiness_id">
        delete from shengxian_shopping_cart_detail
        where goods_id in (select id from shengxian_goods where status in (0,1,3,4) and business_id = #{business_id} )
    </delete>

    <!--通过绑定id查询屏蔽的产品 ,如果有则删除购物车详情里的产品-->
    <delete id="deleteShoppingcartDateilShieldingGoods">
         delete from shengxian_shopping_cart_detail
         where goods_id in (select goods_id from shengxian_goods_shielding where binding_id = #{binding_id})
    </delete>

    <!--查询用户绑定id的屏蔽产品-->
    <select id="shieldingGoods" resultType="Integer">
        select goods_id from shengxian_goods_shielding where binding_id = #{binding_id}
    </select>

    
    <!--根据屏蔽的产品id删除购物车详情对应的产品-->
    <delete id="deteleShoppingCartDetailByGoods_id">
        delete from shengxian_shopping_cart_detail where goods_id = #{goods_id}
    </delete>

    <!-- 通过购物车id查询购物车下的产品信息（无产品图片）-->
    <select id="shoppingcartGoodsDetail" resultType="HashMap">
        select scd.id, g.name ,g.units ,scd.num,g.id as goods_id,
        ifnull((select gs.price from shengxian_goods_scheme gs where scd.goods_id=gs.goods_id and gs.scheme_id =
        (select bd.scheme_id from shengxian_binding bd where bd.is_del = 0 and bd.id= #{binding_id} )),0)price,
        ifnull((select num from shengxian_restriction_goods where g.id=goods_id),'')restriction,
        (select `full` from shengxian_full_bestow where goods_id = g.id)full,
        (select bestow from shengxian_full_bestow where goods_id = g.id)bestow
        from shengxian_shopping_cart_detail scd
        inner join shengxian_goods g on g.id = scd.goods_id and g.status = 2
        where g.is_del= 0 and scd.sc_id = #{sc_id}  and g.business_id = #{business_id}
    </select>

    <!-- 通过购物车id查询购物车下的产品信息（有产品图片）-->
    <select id="shoppingcartDetail" resultType="HashMap">
        select scd.id, g.name ,g.units ,scd.num,g.id as goods_id,
        (select img from shengxian_goods_img where goods_id = g.id order by id asc limit 1)img ,
        ifnull((select gs.price from shengxian_goods_scheme gs where scd.goods_id=gs.goods_id and gs.scheme_id =
        (select bd.scheme_id from shengxian_binding bd where bd.is_del = 0 and bd.id= #{binding_id} )),0)price,
        ifnull((select num from shengxian_restriction_goods where g.id=goods_id),'')restriction,
        (select `full` from shengxian_full_bestow where goods_id = g.id)full,
        (select bestow from shengxian_full_bestow where goods_id = g.id)bestow
        from shengxian_shopping_cart_detail scd
        inner join shengxian_goods g on g.id = scd.goods_id and g.status = 2
        where g.is_del= 0 and scd.sc_id= #{sc_id}  and g.business_id = #{business_id}
    </select>

    <!--结算-->
    <select id="settlement" resultType="HashMap">
        select scd.id ,g.`name`,g.units,scd.num,scd.goods_id,
        IFNULL((select gs.price from shengxian_goods_scheme gs where g.id=gs.goods_id and gs.scheme_id =
        (select scheme_id from shengxian_binding where is_del = 0 and id= #{binding_id} ) ),'无会员价格')price,
        (select gi.img from shengxian_goods_img gi where scd.goods_id = gi.goods_id order by gi.id asc limit 1) img
        from shengxian_shopping_cart_detail scd
        inner join (select id, units,`name` ,status ,is_del , business_id from shengxian_goods ) g on g.id = scd.goods_id and g.status = 2 and is_del = 0
        where scd.id =#{scd_id}  and g.business_id = #{business_id}
    </select>

    <!--查询店铺满减活动优惠券-->
    <select id="businessFullReduction" resultType="HashMap">
        select id , reduce from shengxian_full_reduction
        where is_del = 0 and  business_id = #{business_id}  and full &lt;= #{money}
        and endTime &gt;= CURDATE() and startTime &lt;= CURDATE() order by full desc limit 1
    </select>

    <!--通过用户优惠券ID查询符合金额的优惠券-->
    <select id="accordMoneyCouponByCoupon_id" resultType="HashMap">
        select bc.id , bc.reduce ,c.name from shengxian_binding_coupon bc ,shengxian_coupon c
        where bc.coupon_id = c.id  and bc.id = #{coupon_id} and bc.full &lt;=  #{money}
        and bc.endTime &gt;= CURDATE() and bc.startTime &lt;= CURDATE()
    </select>

    <!--使用用户优惠券-->
    <select id="selectUserCoupon" resultType="Integer">
        select  if((select id from shengxian_binding_coupon where id= #{coupon_id}) is null ,
        if((select bc.id from shengxian_binding_coupon bc
        where bc.binding_id=#{binding_id} and bc.full &lt;=#{money} and bc.endTime &gt;= CURDATE()
        and bc.startTime &lt;=CURDATE()  limit 1  ) is null ,0,
        (select bc.id from shengxian_binding_coupon bc ,shengxian_coupon c
        where bc.coupon_id = c.id and bc.binding_id=#{binding_id} and bc.full &lt;=#{money}
        and bc.endTime &gt;= CURDATE() and bc.startTime &lt;=CURDATE() limit 1 )
        ),
        ifnull((select bc.id from shengxian_binding_coupon bc ,shengxian_coupon c
        where bc.coupon_id = c.id  and bc.id = #{coupon_id} and bc.full &lt;=#{money}
        and bc.endTime &gt;= CURDATE() and bc.startTime &lt;=CURDATE()  ),0)
        )coupon

    </select>

    <!--通过用户优惠券id查询优惠券信息-->
    <select id="userCouponInfoById" resultType="HashMap">
        select bc.id,bc.reduce, c.`name` from shengxian_binding_coupon bc
        inner join shengxian_coupon c on c.id = bc.coupon_id
        where bc.id= #{id}
    </select>

    <!--通过绑定id查询店铺运费-->
    <select id="businessFreight" resultType="Double">
        select ifnull(starting_price,0)freight from shengxian_business
        where is_del=0 and id = (select business_id from shengxian_binding where is_del=0 and id = #{binding_id})
    </select>

    <!--通过token查询绑定用户信息和店铺id-->
    <select id="bindingidAndBusinessidByToken" resultType="HashMap">
        select bd.id , bd.business_id ,credit ,limited ,staff_id
        from shengxian_binding bd where is_del = 0 and
        bd.id = (select bd_id from user u where is_del=0 and token= #{token} )
    </select>

    <!--查询绑定用户的信用额度-->
    <select id="bindingCredit" resultType="Integer">
        select id from shengxian_binding  where is_del=0 and id= #{id} and credit >
        ((select ifnull(sum(price),0) from shengxian_order where is_del=0 and binding_id = #{id} and `status`=4 and state=0 )
        +(select ifnull(sum(money),0) from shengxian_order where is_del=0 and binding_id = #{id}  and `status`=4 and state=2 ))
    </select>

    <!--查询绑定用户的限制天数-->
    <select id="bindingLimited" resultType="Integer">
        select id from shengxian_binding  where is_del=0 and id = #{id} and limited >
        (select DATEDIFF(CURDATE(),DATE_FORMAT(audit_time,'%Y-%m-%d'))
        from shengxian_order where is_del=0 and binding_id= #{id} and
        `status`=4 and state in (0,2) order by DATE_FORMAT(audit_time,'%Y-%m-%d') asc limit 1  )
    </select>


    <!--添加订单-->
    <insert id="addOrder" keyProperty="id" useGeneratedKeys="true">
        insert into shengxian_order( address_id , activity ,coupon_id, order_number ,no ,binding_id ,business_id ,staff_id ,price ,freight ,create_time ,beizhu ,making ,part)
        values(#{address_id}, #{activity} , #{coupon_id} ,#{order_number} ,#{no} ,#{binding_id} ,#{business_id} ,#{staff_id} ,#{price} ,#{freight} ,#{create_time} ,#{beizhu} ,#{making} ,#{part})
    </insert>

    <!--减少产品虚拟库存-->
    <update id="reduceGoodsFictitiousInventory">
        update shengxian_goods_inventory set fictitious = fictitious-#{num} where goods_id=#{goods_id}
    </update>


    <!--添加报损记录-->
    <insert id="addLossGoods">
        insert into shengxian_loss_goods (goods_id,binding_id,num,loss_time,status,order_id)
        values (#{goods_id},#{binding_id},#{num},#{loss_time},#{status},#{order_id});
    </insert>


    <!--根据产品id查询产品进价金额-->
    <select id="findGoodsCostPrice" resultType="Double">
        select cost_price from shengxian_goods where id = #{id}
    </select>

    <!--添加订单详情-->
    <insert id="addOrderDateil" keyProperty="id" useGeneratedKeys="true">
        insert into shengxian_order_details(goods_id ,order_id ,order_number ,order_price ,type ,profit ,cost_price )
        values(#{goods_id} ,#{order_id} ,#{order_number} ,#{order_price} ,#{type} ,#{profit} ,#{cost_price} )
    </insert>

    <!--根据产品id删除购物车详情-->
    <delete id="deteleShoppingCartDetail">
        delete from shengxian_shopping_cart_detail where sc_id = #{sc_id} and  goods_id = #{goods_id}
    </delete>

    <!--推送通知总数-->
    <select id="pushMessageCount" resultType="Integer">
        select count(id)  from shengxian_business_push_message
        where push_id=#{user_id} and type =1
    </select>

    <!--推送通知-->
    <select id="pushMessage" resultType="HashMap">
         select id ,title ,message ,create_time,push_state  from shengxian_business_push_message
         where push_id=#{user_id} and type =1
         order by push_state asc limit #{startIndex} ,#{pageSize}
    </select>

    <!--订单总数-->
    <select id="orderListCount" resultType="Integer">
        select count(o.id) from shengxian_order o
        where o.is_del = 0 and  o.binding_id =#{binding_id}
        <if test="status != null and status != '' ">
            and FIND_IN_SET(o.status, #{status})
        </if>
        <if test="state != null">
            and o.state = #{state}
        </if>
    </select>

    <!--订单总数(推送)-->
    <select id="orderCount" resultType="Integer">
        select count(o.id) from shengxian_order o
        where o.is_del = 0 and  o.binding_id =#{binding_id} and o.push_state = 0  and state not in(2 , 3) and status not in(6)
        <if test="status != null and status != '' ">
            and FIND_IN_SET(o.status, #{status})
        </if>
        <if test="state != null">
            and o.state =#{state}
        </if>
    </select>

    <!--通知总数-->
    <select id="pushCount" resultType="Integer">
        select count(id) from shengxian_business_push_message
        where type = 1 and  push_id=#{user_id} and push_state = 0
    </select>

    <!--修改订单为已读-->
    <update id="updateOrderPush_state">
         update shengxian_order set push_state =1 where id =#{id}
    </update>

    <!--修改通知为已读-->
    <update id="updatePushPush_state">
        update shengxian_business_push_message set push_state =1 where id =#{id}
    </update>

    <!--通过绑定ID查询用户在当前店铺的默认地址-->
    <select id="bindingAddress" resultType="HashMap">
        select id ,name ,phone,address ,details from shengxian_binding_address
        where  binding_id = #{binding_id} order by code desc limit 1
    </select>

    <!--绑定用户地址集合-->
    <select id="bindingAddressList" resultType="HashMap">
        select id ,name ,phone,address ,details ,state
        from shengxian_binding_address where binding_id = #{binding_id}
        order by code desc
    </select>

    <!--通过绑定ID修改绑定用户地址的取消以前的默认-->
    <update id="updateBindingAddressState">
        update shengxian_binding_address set state = 0 where binding_id =#{binding_id} and state = 1
    </update>

    <!--查询用户地址里code最大的一条-->
    <select id="selectBindingAddressLastCode" resultType="Integer">
        select code from shengxian_binding_address where binding_id =#{binding_id} order by code desc limit 1
    </select>

    <!--添加用户收货地址-->
    <insert id="addBindingAddress">
        insert into shengxian_binding_address(binding_id ,name ,phone ,address ,details ,state ,code)
        values( #{binding_id} ,#{name} , #{phone} ,#{address} ,#{details} ,#{state} ,code + #{code})
    </insert>

    <!--通过地址ID查询用户收货地址信息-->
    <select id="bindingAddressById" resultType="HashMap">
         select id ,name ,phone,address ,details
        from shengxian_binding_address where id = #{id}
    </select>

    <!--通过地址ID查询state-->
    <select id="bindingAddressState" resultType="Integer">
        select state from shengxian_binding_address where id = #{id}
    </select>

    <!--修改用户收货地址-->
    <update id="updateBindingAddress">
        update shengxian_binding_address
        set  name = #{name} ,phone = #{phone} ,address =#{address} ,details =#{details} , state =#{state} ,code = code + #{code}
        where id = #{id}
    </update>

    <!--删除用户收货地址-->
    <delete id="deleteBindingAddress">
        delete from shengxian_binding_address where id = #{id}
    </delete>

</mapper>    